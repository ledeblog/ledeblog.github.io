<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>deleのblog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-06-01T12:55:29.877Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>dele</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>6.1sql注入原理+sqlmap再学学习</title>
    <link href="http://yoursite.com/2020/06/01/6-1-sql%E6%B3%A8%E5%85%A5%E5%8E%9F%E7%90%86-sqlmap%E5%86%8D%E5%AD%A6%E5%AD%A6%E4%B9%A0/"/>
    <id>http://yoursite.com/2020/06/01/6-1-sql%E6%B3%A8%E5%85%A5%E5%8E%9F%E7%90%86-sqlmap%E5%86%8D%E5%AD%A6%E5%AD%A6%E4%B9%A0/</id>
    <published>2020-06-01T06:40:34.000Z</published>
    <updated>2020-06-01T12:55:29.877Z</updated>
    
    <content type="html"><![CDATA[<p>Easy注入：</p><p>Wp</p><p>堆叠注入，过滤select，无法使用sele&lt;&gt;ct,</p><p>堆叠注入：分号隔开相关语句</p><p>正则过滤许多内容，但没过滤show，rename,alert；</p><p>Rename table ‘words’ to ‘word1’;rename table ‘199923215445’ to words;</p><p>Alert  ‘words’ change ‘flag’ ‘id’ varchar(100) character set utf8 collate utf8_general_ci not null;show columns from words;#</p><p>猜测背后的语句应该是 select $inject from words；</p><p>所以回显的是words表，但flag内容在数字表里，所以直接将数字表名改成words，并且将列数修改一致，然后再用or 1=1；回显就会显示flag，实在是没有select的被迫使用方法；</p><p>Wp</p><p>难点在于如何判断出征逻辑；</p><p>逻辑是<strong><em>\</em>sel**</strong>ect $_POST[query] || flag from flag</p><p>​    <em>，1；不过滤</em>号的话</p><p>需要使得mysql允许||当做连接符 set sql_mode=pipes_as_concat;</p><p>要从回显可以判断后台代码；</p><p>Sql Server注入</p><p>+用来连接语句</p><p>Having 1=1–；convert、case强制转换函数，显错注入；convert（int,(select top 1 users.username from users)）</p><p>Sys.database;sys_sql_login;information_schema.tables;</p><p>Order by 判断列；</p><p>User_name;db_name;</p><p>*xp_cmdshell；执行命令；</p><p><strong>Mysql</strong></p><p>Information_schema.schemata/tables/columns;</p><p>文件操作，load_file,into file;</p><p>连接字符串；concat/concat_ws(0x2c,user());</p><p><strong><em>\</em>报错注入；**</strong></p><p>Updatexml(1,xml格式冲突，3)</p><p>Extractvalue(1,/xx/xx/xml文件存储格式)</p><p>Floor(rand(0)*2)x goup by x;</p><p><strong><em>\</em>宽字节注入**</strong>：</p><p>Php.ini中，magic_quotes_gpc;自动（‘”\NULL）自动加一个斜杠；</p><p>所以用%d5’;</p><p><strong><em>\</em>长字符截断**</strong>；sql__mode;</p><p>查询admin时长度不一致也会返回，即注册或插入一个长度超过的admin，然后修改已知密码，就可以登陆成功；</p><p><strong><em>\</em>延时注入：**</strong></p><p>And 或者 if 来配合Sleep()，if(lenth(database()==0,sleep(3),1))</p><p>And if(ascii(mid(user(),1,1)=n,sleep(3),1)</p><p>Sql server中有waitfy，oracle的dbms_lock.sleep;</p><p>Oracle:</p><p>User_tablespace</p><p><strong><em>\</em>S*****</strong>*qlmap：****</p><p><strong><em>\</em>–current-db –table –columns –dump**</strong></p><p><strong><em>\</em>–privileges -U ueser；测试用户权限；**</strong></p><p><strong><em>\</em>–os–cmd=*****</strong>*”*<strong>**</strong>*net user*<strong>**</strong>*”*<strong>**</strong>*/–os–shell交互shell****</p><p><strong><em>\</em>–data=*****</strong>*””****</p><p><strong><em>\</em>-r http.txt –dbs；带http请求的注入**</strong></p><p><strong><em>\</em>连接到数据库 -d url –dbs;**</strong></p><p><strong><em>\</em>-tamper=*****</strong>*”*<strong>**</strong>*space/base64/spostro单引号/****</p><p>nmap 的NSE，或者WVS的策略或者APPSCAN的策略中检测是否有waf;–random-agent -v 2 #使用任意浏览器进行绕过，尤其是在WAF配置不当的时候</p><p><strong><em>\</em>穿山甲；**</strong></p><p><strong><em>\</em>防御：**</strong></p><p>调用现成的字符编译api；</p><p>类似的’-&gt;\’；</p><p>但这个是可以二次注入的，比如注入debug’-&gt;debug\’但会插入表单debug’</p><p>那么再查询’title’,-&gt;’debug’’；</p><p><strong><em>\</em>预编译java+c#;mysql&gt;4.1版本**</strong></p><p><strong><em>\</em>J*****</strong>*ava preparestatement函数；注入点****</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Easy注入：&lt;/p&gt;
&lt;p&gt;Wp&lt;/p&gt;
&lt;p&gt;堆叠注入，过滤select，无法使用sele&amp;lt;&amp;gt;ct,&lt;/p&gt;
&lt;p&gt;堆叠注入：分号隔开相关语句&lt;/p&gt;
&lt;p&gt;正则过滤许多内容，但没过滤show，rename,alert；&lt;/p&gt;
&lt;p&gt;Rename tabl
      
    
    </summary>
    
    
      <category term="sql注入" scheme="http://yoursite.com/categories/sql%E6%B3%A8%E5%85%A5/"/>
    
    
      <category term="sql" scheme="http://yoursite.com/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>6.1sql注入原理+sqlmap再学学习</title>
    <link href="http://yoursite.com/2020/06/01/sql%E6%B3%A8%E5%85%A5%E5%8E%9F%E7%90%86-sqlmap%E5%86%8D%E5%AD%A6%E5%AD%A6%E4%B9%A0/"/>
    <id>http://yoursite.com/2020/06/01/sql%E6%B3%A8%E5%85%A5%E5%8E%9F%E7%90%86-sqlmap%E5%86%8D%E5%AD%A6%E5%AD%A6%E4%B9%A0/</id>
    <published>2020-06-01T06:40:34.000Z</published>
    <updated>2020-06-01T16:14:34.294Z</updated>
    
    <content type="html"><![CDATA[<p>Easy注入：</p><p>Wp</p><p>堆叠注入，过滤select，无法使用sele&lt;&gt;ct,</p><p>堆叠注入：分号隔开相关语句</p><p>正则过滤许多内容，但没过滤show，rename,alert；</p><p>Rename table ‘words’ to ‘word1’;rename table ‘199923215445’ to words;</p><p>Alert  ‘words’ change ‘flag’ ‘id’ varchar(100) character set utf8 collate utf8_general_ci not null;show columns from words;#</p><p>猜测背后的语句应该是 select $inject from words；</p><p>所以回显的是words表，但flag内容在数字表里，所以直接将数字表名改成words，并且将列数修改一致，然后再用or 1=1；回显就会显示flag，实在是没有select的被迫使用方法；</p><p>Wp</p><p>难点在于如何判断出征逻辑；</p><p>逻辑是<strong><em>\</em>sel**</strong>ect $_POST[query] || flag from flag</p><p>​    <em>，1；不过滤</em>号的话</p><p>需要使得mysql允许||当做连接符 set sql_mode=pipes_as_concat;</p><p>要从回显可以判断后台代码；</p><p>Sql Server注入</p><p>+用来连接语句</p><p>Having 1=1–；convert、case强制转换函数，显错注入；convert（int,(select top 1 users.username from users)）</p><p>Sys.database;sys_sql_login;information_schema.tables;</p><p>Order by 判断列；</p><p>User_name;db_name;</p><p>*xp_cmdshell；执行命令；</p><p><strong>Mysql</strong></p><p>Information_schema.schemata/tables/columns;</p><p>文件操作，load_file,into file;</p><p>连接字符串；concat/concat_ws(0x2c,user());</p><p><strong><em>\</em>报错注入；**</strong></p><p>Updatexml(1,xml格式冲突，3)</p><p>Extractvalue(1,/xx/xx/xml文件存储格式)</p><p>Floor(rand(0)*2)x goup by x;</p><p><strong><em>\</em>宽字节注入**</strong>：</p><p>Php.ini中，magic_quotes_gpc;自动（‘”\NULL）自动加一个斜杠；</p><p>所以用%d5’;</p><p><strong><em>\</em>长字符截断**</strong>；sql__mode;</p><p>查询admin时长度不一致也会返回，即注册或插入一个长度超过的admin，然后修改已知密码，就可以登陆成功；</p><p><strong><em>\</em>延时注入：**</strong></p><p>And 或者 if 来配合Sleep()，if(lenth(database()==0,sleep(3),1))</p><p>And if(ascii(mid(user(),1,1)=n,sleep(3),1)</p><p>Sql server中有waitfy，oracle的dbms_lock.sleep;</p><p>Oracle:</p><p>User_tablespace</p><p><strong><em>\</em>S*****</strong>*qlmap：****</p><p><strong><em>\</em>–current-db –table –columns –dump**</strong></p><p><strong><em>\</em>–privileges -U ueser；测试用户权限；**</strong></p><p><strong><em>\</em>–os–cmd=*****</strong>*”*<strong>**</strong>*net user*<strong>**</strong>*”*<strong>**</strong>*/–os–shell交互shell****</p><p><strong><em>\</em>–data=*****</strong>*””****</p><p><strong><em>\</em>-r http.txt –dbs；带http请求的注入**</strong></p><p><strong><em>\</em>连接到数据库 -d url –dbs;**</strong></p><p><strong><em>\</em>-tamper=*****</strong>*”*<strong>**</strong>*space/base64/spostro单引号/****</p><p>nmap 的NSE，或者WVS的策略或者APPSCAN的策略中检测是否有waf;–random-agent -v 2 #使用任意浏览器进行绕过，尤其是在WAF配置不当的时候</p><p><strong><em>\</em>穿山甲；**</strong></p><p><strong><em>\</em>防御：**</strong></p><p>调用现成的字符编译api；</p><p>类似的’-&gt;\’；</p><p>但这个是可以二次注入的，比如注入debug’-&gt;debug\’但会插入表单debug’</p><p>那么再查询’title’,-&gt;’debug’’；</p><p><strong><em>\</em>预编译java+c#;mysql&gt;4.1版本**</strong></p><p><strong><em>\</em>J*****</strong>*ava preparestatement函数；注入点****</p><p>实际操作过，mysql的预编译使用；</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Easy注入：&lt;/p&gt;
&lt;p&gt;Wp&lt;/p&gt;
&lt;p&gt;堆叠注入，过滤select，无法使用sele&amp;lt;&amp;gt;ct,&lt;/p&gt;
&lt;p&gt;堆叠注入：分号隔开相关语句&lt;/p&gt;
&lt;p&gt;正则过滤许多内容，但没过滤show，rename,alert；&lt;/p&gt;
&lt;p&gt;Rename tabl
      
    
    </summary>
    
    
      <category term="sql注入" scheme="http://yoursite.com/categories/sql%E6%B3%A8%E5%85%A5/"/>
    
    
      <category term="sql" scheme="http://yoursite.com/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>kali2020.1-root登录</title>
    <link href="http://yoursite.com/2020/05/23/kali202-1-root%E7%99%BB%E5%BD%95/"/>
    <id>http://yoursite.com/2020/05/23/kali202-1-root%E7%99%BB%E5%BD%95/</id>
    <published>2020-05-23T08:24:46.000Z</published>
    <updated>2020-05-23T09:46:12.906Z</updated>
    
    <content type="html"><![CDATA[<h4 id="kali2020-1最全修改root登录方式"><a href="#kali2020-1最全修改root登录方式" class="headerlink" title="kali2020.1最全修改root登录方式"></a>kali2020.1最全修改root登录方式</h4><p>kali2020.1正式版初始不再是默认root登录了，让习惯了root的我，不太习惯，不过没关系，我们修改些东西；</p><p>​    修改root密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">uperr@root:sudo passwd root</span><br><span class="line">sudo vi /etc/pam.d/gdm-autologin</span><br><span class="line">sudo vi /etc/pam.d/gdm-password</span><br></pre></td></tr></table></figure><p>没错，网上有很多可以修改root密码的方法，但后知后觉的我发现，修改了也无济于事；</p><p>于是，我发现是kali禁止我们使用root登录，真坏呀</p><p><img src="/images/QQ%E6%88%AA%E5%9B%BE20200523163254.png" alt=""></p><p>就是上面两个vi打开，然后把root≠那一行注释掉，完美解决；</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;kali2020-1最全修改root登录方式&quot;&gt;&lt;a href=&quot;#kali2020-1最全修改root登录方式&quot; class=&quot;headerlink&quot; title=&quot;kali2020.1最全修改root登录方式&quot;&gt;&lt;/a&gt;kali2020.1最全修改root登录
      
    
    </summary>
    
    
      <category term="kali" scheme="http://yoursite.com/categories/kali/"/>
    
    
      <category term="kali" scheme="http://yoursite.com/tags/kali/"/>
    
  </entry>
  
  <entry>
    <title>5.14-warmup代码审计-wp</title>
    <link href="http://yoursite.com/2020/05/14/5-14-warmup%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-wp/"/>
    <id>http://yoursite.com/2020/05/14/5-14-warmup%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-wp/</id>
    <published>2020-05-14T14:11:58.000Z</published>
    <updated>2020-05-14T14:11:58.173Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>4.27-tcp/ip</title>
    <link href="http://yoursite.com/2020/04/27/4-27-tcp-ip/"/>
    <id>http://yoursite.com/2020/04/27/4-27-tcp-ip/</id>
    <published>2020-04-27T15:21:34.000Z</published>
    <updated>2020-06-05T09:03:11.883Z</updated>
    
    <content type="html"><![CDATA[<p> Tcp/ip协议</p><p><img src="/images/wps1.jpg" alt="img"> </p><p>应用层：Telnet远程登录，ftP文件传输，smtp简单邮件传输，snmp简单网络管理协议</p><p>IP地址：</p><p>a:0<em>.</em>.<em>.</em>;b=10<em>;c110*d1110</em></p><p>一个接口对应一个IP地址</p><p>Dns域名系统-&gt;ip地址与主机地址的关系</p><p>封装-分用；T C P服务器是并发的，而 U D P服务器是重复的</p><p>tcp端口，ftp=21;telnet=23</p><p>用T C P / I P协议的应用程序通常采用两种应用编程接口（ A P I）：s o c k e t和T L I</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt; Tcp/ip协议&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/wps1.jpg&quot; alt=&quot;img&quot;&gt; &lt;/p&gt;
&lt;p&gt;应用层：Telnet远程登录，ftP文件传输，smtp简单邮件传输，snmp简单网络管理协议&lt;/p&gt;
&lt;p&gt;IP地址：&lt;/p&gt;
&lt;p&gt;a:0&lt;em
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>new life for future - linux再回顾</title>
    <link href="http://yoursite.com/2020/04/27/new-life-for-future-linux%E5%86%8D%E5%9B%9E%E9%A1%BE/"/>
    <id>http://yoursite.com/2020/04/27/new-life-for-future-linux%E5%86%8D%E5%9B%9E%E9%A1%BE/</id>
    <published>2020-04-27T15:03:29.000Z</published>
    <updated>2020-04-27T15:03:29.429Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>3.28-移动安全作业-5G</title>
    <link href="http://yoursite.com/2020/03/28/3-28-%E7%A7%BB%E5%8A%A8%E5%AE%89%E5%85%A8%E4%BD%9C%E4%B8%9A-5G/"/>
    <id>http://yoursite.com/2020/03/28/3-28-%E7%A7%BB%E5%8A%A8%E5%AE%89%E5%85%A8%E4%BD%9C%E4%B8%9A-5G/</id>
    <published>2020-03-28T14:45:51.000Z</published>
    <updated>2020-06-05T09:03:59.378Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-5G标准是什么"><a href="#1-5G标准是什么" class="headerlink" title="\1 5G标准是什么**"></a><strong><em>\</em>1 5G标准是什么**</strong></h1><p>要想理解5G标准，首先要明白5g从何而来，5g的架构，5g是什么，以及现在过去的情况，很浩大的信息。其实5G标准很早就开始制定，一直在变动，但真正让人瞩目还是18年3GPP TSG#80全会上关于5G NR的独立组网的冻结，才算首个真正意义上的5G国际标准，也是完整的R15标准，5G也真正的进入冲刺阶段。</p><p>R15标准不仅定义了5G NR（新无线）以满足5G用例和需求，还定义了新的5G核心网（5GC），以及扩展增强了LTE / LTE-Advanced功能。</p><p>5G定义了增强型移动宽带（eMBB）、超可靠低延迟通信（URLLC）、大规模机器类型通信（mMTC）三大场景。</p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td></td><td><img src="/images/wps2.jpg" alt="img"></td></tr></tbody></table><p>图 1</p><p>针对这三大场景，在2018年6月已完成的3GPP R15标准不仅定义了5G NR（新无线）以满足5G用例和需求，还定义了新的5G核心网（5GC），以及扩展增强了LTE / LTE-Advanced功能。</p><p>5G NR：</p><p>R15 5G NR主要针对eMBB和URLLC两大场景定义了新规范。</p><p>eMBB</p><p>针对eMBB场景，NR主要定义了三大类技术：高频/超宽带传输、Massive MIMO、灵活的帧结构和物理信道结构。</p><p>高频/超宽带传输：</p><p>高频： </p><p>NR指定了两大频段范围FR1和FR2，FR1（450MHz-6GHz），FR2（24.25GHz-52.6GHz）。</p><p>超宽带：</p><p>FR1的信道/单载波带宽高达100MHz，FR2的单载波带宽高达400MHz。</p><p>此外，物理层还支持载波聚合（CA）和双连接技术，可聚合多达16个载波，以实现更高速传输。</p><p>LTE频段不高于3GHz，单载波带宽仅为20MHz，因此，高频和超宽带是5G与4G的主要区别。</p><p>后面还有更多详细的通信细节就先不详细描述了，先就安全标准相关的进行阐述。</p><h1 id="2-5G安全架构组成"><a href="#2-5G安全架构组成" class="headerlink" title="\2 5G安全架构组成**"></a><strong><em>\</em>2 5G安全架构组成**</strong></h1><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td></td><td><img src="/images/wps3.jpg" alt="img"></td></tr></tbody></table><p>图 2</p><p>在核心网的网元中，涉及到安全的实体包括：</p><p>AUSF: AUthenticationServer FunctionAU身份验证服务器功能</p><p>ARPF:Authenticationcredential Repository and Processing Function 身份验证凭据存储库和处理功能</p><p>SIDF:Subscription Identifier De-concealingFunction用户标识符隐藏功能</p><p>SEAF:SEcurity Anchor Function安全锚函数</p><h2 id="2-1-网络安全要求和功能"><a href="#2-1-网络安全要求和功能" class="headerlink" title="\2.******1** **网络安全要求和功能****"></a><strong><em>\</em>2.*****</strong>*1*<strong>* *</strong>*网络安全要求和功能****</h2><p>网络安全一般要求缓解和降低攻击，验证身份和授权以及密钥相关功能。网络安全对于终端、gNB以及核心网的网元都有要求。具体的要求包括：</p><p>支持用户数据和信令机密性</p><p>支持用户数据和信令完整性</p><p>支持用户隐私保护</p><p>当然对于不同的网元，协议里面的要求是不同的。具体的要求可以查看协议里的详细内容。</p><h2 id="2-2-身份验证"><a href="#2-2-身份验证" class="headerlink" title="\2.******2** **身份验证****"></a><strong><em>\</em>2.*****</strong>*2*<strong>* *</strong>*身份验证****</h2><p>身份验证的目的是在UE和网络之间相互认证，并生成安全密钥以便在后续的流程中使用。由归属网格AUSF向服务网格的SEAF提供的密钥称为锚密钥KSEAF。之所以称它为锚密钥，是因为由锚密钥派生出的多个安全上下文的密钥无需新的身份验证。</p><p>UE和服务网络之间支持EAP-AKA’和5G AKA这两种认证算法。在认证的框架里面，UE扮演者同伴的角色，SEAF扮演传递认证者的角色而AUSF扮演着后端身份验证服务器的角色。身份认证的过程包括两个步骤，</p><p>启动身份验证选择身份验证方法</p><p>身份验证过程，启动身份认证的流程由UE发起，终止于UDM/ARFP/SIDF。</p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td></td><td><img src="/images/wps4.jpg" alt="img"></td></tr></tbody></table><p>图 3-启动认证流程并选择验证方式</p><p>启动认证流程的关键点是将UE上报的SUCI或者5G-GUTI上报给核心网。其中</p><p>SUCI：SubscriptionConcealed Identifier 用户隐藏标识</p><p>SUPI：SubscriptionPermanent Identifier 用户永久标识</p><p>GUTI：GloballyUnique Temporary UE Identity 临时UE标识</p><p>5G上报隐藏标识而非用户永久标识，也是出去安全的目的。于4G直接上报IMSI相比，5G的网络安全有了很大的加强。最后UDM通过调用SIDF破译SUCI得到用户的SUPI，然后再根据用户数据选择认证方式。认证方式包括上文所说的EAP-AKA’和5G AKA这两种认证算法。</p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td></td><td><img src="/images/wps5.jpg" alt="img"></td></tr></tbody></table><p>图 4</p><h2 id="2-3密钥派生与管理"><a href="#2-3密钥派生与管理" class="headerlink" title="\2.3密钥派生与管理**"></a><strong><em>\</em>2.3密钥派生与管理**</strong></h2><p>5G网络安全涉及到很多的密钥，有序的管理分发密钥非常重要。图5展示了网络和终端密钥分发与导出的流程图。</p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td></td><td><img src="/images/wps6.jpg" alt="img"></td></tr></tbody></table><p>图 5</p><h1 id="3-安全挑战"><a href="#3-安全挑战" class="headerlink" title="3. \安全挑战**"></a><strong>3.</strong> <strong><em>\</em>安全挑战**</strong></h1><h2 id="3-1-前言"><a href="#3-1-前言" class="headerlink" title="\3.1 前言**"></a><strong><em>\</em>3.1 前言**</strong></h2><p>与前几代 - 2G，3G和4G长期演进（LTE）一样，安全性对于5G网络和服务至关重要。蜂窝通信网络为全球数十亿平民提供连接。它们也是当前和新兴关键基础设施的连接基石，支持智能电网，第一响应单元和先进的军事行动。5G的出现将使民用，工业和任务关键领域的新纵向成为可能。受传统2G网络固有的安全弱点的影响，例如网络和用户设备（UE）之间缺乏相互认证，安全性一直是从3G开始的移动通信的关键设计考虑因素之一。LTE实现了强大的加密和完整性保护算法，使用对称密钥进行相互身份验证，这些密钥安全地存储在通用用户识别模块（USIM）和运营商的归属用户服务器（HSS）中。</p><p>尽管如此，LTE协议固有的一系列漏洞仍然存在，并且在过去几年中已经被研究人员识别出来。例如，大量的预认证消息以明文形式发送，可用于发起拒绝服务（DoS）攻击并获取移动用户的位置信息]。LTE规范的第一个版本，即3GPP Release 8，于2007年发布。但是，直到很久以后，主要的安全漏洞才在开放文献中被识别和报告。其中一个原因是缺乏可用且价格合理的LTE安全研究工具。在个人计算机上运行的LTE开源软件库以及使用商业现成的软件定义无线电（SDR）外围设备直到最近几年才达到足够的成熟度。一旦它们可用，就会出现LTE移动通信领域的一系列优秀安全研究，并确定了许多协议漏洞[5],[7]-[10]。与LTE一样，安全性是5G系统定义和规范的关键考虑因素和核心方面。自从NR和5G-S（5G系统）的通信协议开始以来，已经在解决已知的LTE协议漏洞方面做了大量努力，特别关注于防止国际移动用户识别器（IMSI）捕获器或黄貂鱼( 原文是：Stingrays )[11]。因此，5G协议引入了订户永久标识符（SUPI）作为IMSI的替代，以及公钥基础结构（PKI），它允许将SUPI加密到订户隐藏标识符（SUCI）[12]。防止利用预认证消息的协议漏洞也是5G的关键安全设计目标[13]。尽管如此，尽管努力设计安全架构，仍然存在许多不安全的协议边缘情况。</p><p>A.关键框架</p><p>5G安全程序利用分层密钥派生，分发和管理框架。密钥存储在许多网络实体中。长期密钥K由统一数据管理（UDM）层的认证凭证存储库和处理功能（ARPF）存储，并且USIM保存该对称密钥的用户对应副本。所有其他密钥都是从它派生的。密钥生成和分发详见[12]。</p><p>B.认证和本地网络控制</p><p>3GPP建立用于认证和密钥协商的可扩展认证协议EAP-AKA和5G-AKA作为5G UE和5GC都必须支持的认证方法。5G UE在其注册请求中使用SUCI以使用他们选择的方法启动认证过程。这些安全模式用于相互身份验证和后续服务安全性和加密过程。5G AKA通过向HN提供来自受访网络的UE成功认证的证据来增强4G LTE的AKA协议[4]。</p><p>C.安全上下文</p><p>5G安全规范针对不同场景定义了许多安全上下文：单个5G服务网络（SN），跨多个SN，以及5G和4G网络之间。当UE注册有两个SN时，两个网络必须独立地维护和使用单独的安全上下文。当UE在同一公共陆地移动网络（PLMN），3GPP和非3GPP中注册到两个SN时，UE与这些网络建立两个独立的非接入层（NAS）平面连接，但是使用公共NAS安全上下文。由一组密钥和安全算法组成。    D.状态转换和移动</p><p>在状态转换和移交期间维护或忽视安全上下文的程序在某种程度上也在[12]中定义。规范规定，如何配置切换类型的选择取决于运营商的政策。此决定是运营商安全要求的函数，因此在切换期间将安全性作为选择加入功能，而不是通过标准强制执行。结果，运营商可能潜在地实施不安全的切换过程。E.非接入层</p><p>通过公共NAS安全上下文支持两个活动NAS连接的加密分离和重放保护，该安全上下文具有针对每个NAS连接的参数。NAS使用128位加密算法来保证完整性和保密性。请注意，支持空加密和空完整性保护。如果UE没有NAS安全上下文，则初始NAS消息以明文发送，并且包含订阅标识符和UE安全能力等。    F.无线电资源控制</p><p>无线电资源控制（RRC）完整性和保密性保护由UE和gNB之间的分组数据会聚协议（PDCP）层提供，并且PDCP下面的层不应受到完整性保护。激活完整性保护时，将激活重播保护，除非所选的完整性保护算法是NIA0（空完整性保护）。在UE和gNB处执行RRC完整性检查。在完整性保护开始后检测到完整性检查失败的情况下，应丢弃相关消息。</p><p>G.用户平面</p><p>会话管理功能（SMF）应在PDU会话建立过程期间为gNB的协议数据单元（PDU）会话提供用户平面安全策略。如果未针对数据无线电承载（DRB）激活用户平面完整性保护，则gNB和UE不应完整性地保护这种DRB的业务。如果没有为DRB激活用户平面加密，则gNB和UE不应加密这种DRB的流量。本地SMF可以覆盖从归属SMF接收的用户平面安全策略中的保密性选项。</p><p>H.订阅ID隐私</p><p>SUCI是5G永久订阅标识SUPI的隐藏版本。SUCI通过空中传输以防止以明文形式暴露用户身份。它由SUPI使用运营商的公钥和概率非对称加密方法构建，以防止身份跟踪。然而，SUPI零保护方案用于未经认证的紧急会话，当由HN配置时，或者当尚未提供运营商公钥时。5G规格还定义了一个临时标识符，即5G全球唯一临时标识符（5G-GUTI），以最大限度地减少SUPI或SUCI的暴露。5G-GUTI将基于UE触发器重新分配，但是留给实现来确定这种重新分配的速率。</p><h2 id="3-2-5G安全挑战和机遇的潜在脆弱性"><a href="#3-2-5G安全挑战和机遇的潜在脆弱性" class="headerlink" title="\3.2 5G安全挑战和机遇的潜在脆弱性**"></a><strong><em>\</em>3.2 5G安全挑战和机遇的潜在脆弱性**</strong></h2><h3 id="A-预认证消息漏洞"><a href="#A-预认证消息漏洞" class="headerlink" title="\A.预认证消息漏洞**"></a><strong><em>\</em>A.预认证消息漏洞**</strong></h3><p>5G安全架构的目标是应对预认证消息和其他协议漏洞的挑战[13]。通过引入运营商公钥的概念，5G系统提供了在5G PKI的保护下在最终用户和移动运营商之间建立信任根的工具。利用烧录到USIM中的公钥，运营商可以安全地从UE接收加密消息以及用其相应的秘密密钥签署消息以由UE验证。此PKI是用于防止Stingray的方法。但是，在如何利用5G预认证消息对所有协议漏洞实现这种安全级别的规范中，没有明确的解决方案。这些规范没有达到理想的完整PKI架构，利用数字证书和证书颁发机构（CA）来应对这样的安全挑战。此外，虽然SUPI捕获比IMSI捕获更具挑战性，但仍有许多有效的协议边缘情况，其中SUPI以明文[12]传输。因此，流氓5G基站可能欺骗UE公开其SUPI。值得注意的是，在5G中，没有方法来防止流氓基站指示UE利用欺骗的预认证消息来公开其SUPI。但是，在5G中，SUPI将以SUCI的形式加密传输。类似地，5G中没有安全方法防止UE隐式地信任预认证消息。为了避免使用5G当前PKI基本提议进行预认证消息攻击，需要全局合规性。也就是说，为了验证包括漫游在内的所有连接场景中的所有预认证消息的有效性，每个UE将需要它可以连接到的任何网络的加密信任根。这是因为网络发起的消息，例如AttachReject和TAUReject，以其LTE协议利用[6]，[7]而闻名，可能在漫游时起源于访问网络，而不是HN。针对预认证消息漏洞的潜在解决方案还需要运营商加载到所有USIM中，并且无一例外地为每个国家的每个运营商正确管理公钥。预计一些国家将禁止某些其他国家或运营商的公钥，这是之前已经观察到的。</p><h3 id="B-其他安全挑战"><a href="#B-其他安全挑战" class="headerlink" title="B. \其他安全挑战**"></a><strong>B.</strong> <strong><em>\</em>其他安全挑战**</strong></h3><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td></td><td><img src="/images/wps7.jpg" alt="img"></td></tr></tbody></table><p>图 6</p><p>这些规范超出了协议范围之外的大多数对安全至关重要的实现细节，例如驻留在订户的USIM中的运营商公钥的密钥管理，证书的结构以及如何或是否轮换密钥。它留给行业来详细说明这些细节。先前的经验表明，快速推出和价格合理的服务交付需要简单的协议解决方案，这通常会危及安全性。此外，合法的拦截要求要求继续支持空加密和零完整性保护，这会导致不安全的通信模式和协议边缘情况。相对于前几代增加的本地控制被认为对于防止某些类型的欺诈是有用的。建议的5G安全框架支持实施此类程序，但它们被认为超出了规范的范围：本地网络将认证确认（或缺乏认证）与后续程序联系起来的行动受制于运营商政策并且不是标准化的。除了上述安全挑战之外，研究人员已经发现了其中定义的加密操作的弱点。的作者使用形式验证工具来分析5G AKA算法，并证明该协议未能满足明确要求的若干安全目标。该研究还表明，5G协议缺乏其他关键的安全属性。和中提出的研究得出了类似的结论。</p><p><strong>C.</strong> <strong><em>\</em>基于PKI的架构替代方案**</strong></p><p>在5G中向基于PKI的架构迈进是朝着正确方向迈出的一步。PKI系统为复杂的安全解决方案提供了更广泛的灵活性，可以解决例如预认证消息的挑战。但是，5G系统架构的这一关键要素不应该被排除在规范之外。全球协议和采用大规模PKI架构对于全面解决5G长期的安全挑战是必要的。但是，改进的架构不是将系统基于烧录到USIM的公钥，而是包括全球5G证书颁发机构（CA）。CA将充当信任的根，以基于数字证书来验证消息和通信。这样的权限将提供更灵活的架构，相应的证书撤销和管理挑战已经得到解决，安全的互联网实施社区[23]审查了解决方案。关于应用于移动通信系统的基于PKI的架构的潜力的类似建议已经讨论了十多年。它也是欧洲5GPPP组的重要组成部分。</p><h1 id="4-总结"><a href="#4-总结" class="headerlink" title="4. \总结**"></a><strong>4.</strong> <strong><em>\</em>总结**</strong></h1><p>5G规范仍然容易受到利用预身份验证消息的相同类型的LTE对抗性攻击。都不应促进空认证，空加密，降级攻击，预认证消息的利用和SUPI捕获。这种安全框架的成功不应受到隐含的假设或实施选择的影响。不过5G安全架构通过提出的PKI架构在正确的方向上取得了重大飞跃。</p><p>开始做之前还雄心满满的准备看一下5G安全协议的漏洞然后进行，但殊不知还没有确定完全，最后只能分析4G带来的漏洞对5G的影响了；</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-5G标准是什么&quot;&gt;&lt;a href=&quot;#1-5G标准是什么&quot; class=&quot;headerlink&quot; title=&quot;\1 5G标准是什么**&quot;&gt;&lt;/a&gt;&lt;strong&gt;&lt;em&gt;\&lt;/em&gt;1 5G标准是什么**&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;要想理解5G标准，首
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>3.25-.htaccess</title>
    <link href="http://yoursite.com/2020/03/25/3.25-htaccess/"/>
    <id>http://yoursite.com/2020/03/25/3.25-htaccess/</id>
    <published>2020-03-25T04:51:21.000Z</published>
    <updated>2020-03-25T04:55:18.479Z</updated>
    
    <content type="html"><![CDATA[<h5 id="htaccess"><a href="#htaccess" class="headerlink" title=".htaccess"></a>.htaccess</h5><p>.htaccess文件是Apache服务器中的一个配置文件，它负责相关目录下的网页配置.通过htaccess文件，可以实现:网页301重定向、自定义404页面、改变文件扩展名、允许/阻止特定的用户或者目录的访问、禁止目录列表、配置默认文档等功能。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">&lt;FilesMatch "cimer"&gt;</span></span><br><span class="line"><span class="attribute"><span class="nomarkup">SetHandler</span></span> application/x-httpd一php</span><br><span class="line"><span class="section">&lt;/FilesMatch&gt;</span></span><br></pre></td></tr></table></figure><p>包含cimer的文件会被当做php执行；</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;htaccess&quot;&gt;&lt;a href=&quot;#htaccess&quot; class=&quot;headerlink&quot; title=&quot;.htaccess&quot;&gt;&lt;/a&gt;.htaccess&lt;/h5&gt;&lt;p&gt;.htaccess文件是Apache服务器中的一个配置文件，它负责相关目录下的网页配置.
      
    
    </summary>
    
    
      <category term="漏洞" scheme="http://yoursite.com/categories/%E6%BC%8F%E6%B4%9E/"/>
    
    
  </entry>
  
  <entry>
    <title>面经</title>
    <link href="http://yoursite.com/2020/03/24/%E9%9D%A2%E7%BB%8F/"/>
    <id>http://yoursite.com/2020/03/24/%E9%9D%A2%E7%BB%8F/</id>
    <published>2020-03-24T08:16:20.000Z</published>
    <updated>2020-03-24T14:47:31.144Z</updated>
    
    <content type="html"><![CDATA[<p>面试才知道自己平时有大大咧咧，很多细小的东西都记得模模糊糊的，很难受，一些很简单的，都能被问倒；</p><p>安恒北京：</p><p>1.http报头；cookie，session，token</p><p>2.常见端口：</p><p>3389,443,445，</p><p>3.常见漏洞：</p><p>你要能列出来</p><p>4.文件上传漏洞</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;面试才知道自己平时有大大咧咧，很多细小的东西都记得模模糊糊的，很难受，一些很简单的，都能被问倒；&lt;/p&gt;
&lt;p&gt;安恒北京：&lt;/p&gt;
&lt;p&gt;1.http报头；cookie，session，token&lt;/p&gt;
&lt;p&gt;2.常见端口：&lt;/p&gt;
&lt;p&gt;3389,443,445，&lt;/p
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>3.24-iis解析漏洞</title>
    <link href="http://yoursite.com/2020/03/24/3.24-iis%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9E/"/>
    <id>http://yoursite.com/2020/03/24/3.24-iis%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9E/</id>
    <published>2020-03-24T06:56:34.000Z</published>
    <updated>2020-03-25T08:30:52.453Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">IIS <span class="number">6.0</span></span><br><span class="line">　　/xx.asp/xx.jpg “xx.asp”是文件夹名 xx.asp;.jpg</span><br><span class="line">　　IIS <span class="number">7.0</span>/<span class="number">7.5</span></span><br><span class="line">　　默认Fast-CGI开启，直接在url中图片地址后面输入/<span class="number">1.</span>php，会把正常图片当成php解析</span><br><span class="line">　　Nginx</span><br><span class="line">　　版本小于等于<span class="number">0.8</span><span class="number">.37</span>，利用方法和IIS <span class="number">7.0</span>/<span class="number">7.5</span>一样，Fast-CGI关闭情况下也可利用。</span><br><span class="line">　　空字节代码 xxx.jpg.php</span><br><span class="line">　　Apache</span><br><span class="line">　　上传的文件命名为：test.php.x1.x2.x3，Apache是从右往左判断后缀</span><br><span class="line">　　lighttpd</span><br><span class="line">　　xx.jpg/xx.php</span><br></pre></td></tr></table></figure><p>（../）或简单地（/）从目录中直接<a href="https://www.secpulse.com/archives/tag/读取文件" target="_blank" rel="noopener">读取文件</a>的内容 </p><p>NULL byte攻击。</p><p>打开burp suite捕获浏览器请求，然后选择代理选项卡并开始截取。 不要忘记在使用<a href="https://www.secpulse.com/archives/tag/burp" target="_blank" rel="noopener">burp</a> suite时设置浏览器代理。</p><p> 通过在<a href="https://www.secpulse.com/archives/tag/etc/passwd" target="_blank" rel="noopener">etc/passwd</a>目录的末尾添加空字符（％00）来转发请求 </p><p>安全级别高并且无法查看PHP文件内容时，使用以下PHP函数：</p><blockquote><p><a href="http://192.168.1.101/bWAPP/rlfi.php?language=php：//filter/read=convert.base64-encode/resource=/etc/passwd" target="_blank" rel="noopener">http://192.168.1.101/bWAPP/rlfi.php?language=php：//filter/read=convert.base64-encode/resource=/etc/passwd</a></p></blockquote><p>通过反向连接连接目标机器; 在[kali Linux](<a href="https://www.secpulse.com/archives/tag/kali" target="_blank" rel="noopener">https://www.secpulse.com/archives/tag/kali</a> Linux)中打开终端输入msfconsole启动metasploit。</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> exploit/multi/script/web_delivery</span><br></pre></td></tr></table></figure><p><img src="/images/QQ%E6%88%AA%E5%9B%BE20200324150022.png" alt=""></p><p>ms15-.34</p><p>使用IIS作为WEB容器且使用版本存在编号为MS-15034的远程代码执行漏洞。利用该漏洞可轻易使服务器宕机蓝屏。发送测试代码，若返回“Requested Range Not Satisfiable”证明存在此漏洞。</p><h5 id="IIS6-0"><a href="#IIS6-0" class="headerlink" title="IIS6.0"></a>IIS6.0</h5><p>1.以*.asp命名的文件夹里的文件都将会被当成ASP文件执行。</p><p>2.*.asp;.jpg 像这种畸形文件名在“；”后面的直接被忽略，也就是说当成 *.asp文件执行。</p><p><strong>配合PUT漏洞GET shell</strong></p><p>虽然没开脚本资源访问权限，但是可以通过move改成后缀为txt的文件名。配合文件解析漏洞可getshell。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight angelscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span
      
    
    </summary>
    
    
      <category term="漏洞" scheme="http://yoursite.com/categories/%E6%BC%8F%E6%B4%9E/"/>
    
    
  </entry>
  
  <entry>
    <title>3.23-漏洞扫描-AWVS</title>
    <link href="http://yoursite.com/2020/03/23/3-23-%E6%BC%8F%E6%B4%9E%E6%89%AB%E6%8F%8F-AWVS/"/>
    <id>http://yoursite.com/2020/03/23/3-23-%E6%BC%8F%E6%B4%9E%E6%89%AB%E6%8F%8F-AWVS/</id>
    <published>2020-03-23T14:57:43.000Z</published>
    <updated>2020-03-23T14:57:43.547Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>网站webshell扫描工具</title>
    <link href="http://yoursite.com/2020/03/23/%E7%BD%91%E7%AB%99webshell%E6%89%AB%E6%8F%8F%E5%B7%A5%E5%85%B7/"/>
    <id>http://yoursite.com/2020/03/23/%E7%BD%91%E7%AB%99webshell%E6%89%AB%E6%8F%8F%E5%B7%A5%E5%85%B7/</id>
    <published>2020-03-23T14:50:35.000Z</published>
    <updated>2020-03-23T14:50:35.243Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>3.23-flash跨域策略文件</title>
    <link href="http://yoursite.com/2020/03/23/3.23-%E8%B7%A8%E5%9F%9F%E7%AD%96%E7%95%A5%E6%96%87%E4%BB%B6/"/>
    <id>http://yoursite.com/2020/03/23/3.23-%E8%B7%A8%E5%9F%9F%E7%AD%96%E7%95%A5%E6%96%87%E4%BB%B6/</id>
    <published>2020-03-23T14:38:05.000Z</published>
    <updated>2020-03-25T05:24:52.677Z</updated>
    
    <content type="html"><![CDATA[<h5 id="flash跨域"><a href="#flash跨域" class="headerlink" title="flash跨域"></a>flash跨域</h5><p>配置文件：</p><ul><li>site-control（确认是否可以允许加载其他策略文件）</li><li>allow-access-from（确认能够读取本域内容的flash文件来源域）</li><li>allow-access-from-identity（有特定证书的来源跨域访问本域上的资源）</li><li>allow-http-request-headers-from（授权第三方域flash向本域发送用户定义的http头）</li></ul><p>domain=’’*’’</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;flash跨域&quot;&gt;&lt;a href=&quot;#flash跨域&quot; class=&quot;headerlink&quot; title=&quot;flash跨域&quot;&gt;&lt;/a&gt;flash跨域&lt;/h5&gt;&lt;p&gt;配置文件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;site-control（确认是否可以允许加载其他策略文件）&lt;
      
    
    </summary>
    
    
      <category term="漏洞" scheme="http://yoursite.com/categories/%E6%BC%8F%E6%B4%9E/"/>
    
    
  </entry>
  
  <entry>
    <title>3.23-渗透实战-Breach</title>
    <link href="http://yoursite.com/2020/03/23/3.23-%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98-Breach/"/>
    <id>http://yoursite.com/2020/03/23/3.23-%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98-Breach/</id>
    <published>2020-03-23T14:29:13.000Z</published>
    <updated>2020-03-23T14:31:17.763Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.freebuf.com/articles/system/171318.html" target="_blank" rel="noopener">https://www.freebuf.com/articles/system/171318.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.freebuf.com/articles/system/171318.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.freebuf.com/articles/system/1713
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>登录页面的漏洞</title>
    <link href="http://yoursite.com/2020/03/22/3.22-%E7%99%BB%E5%BD%95%E9%A1%B5%E9%9D%A2%E7%BB%95%E8%BF%87%E9%AA%8C%E8%AF%81/"/>
    <id>http://yoursite.com/2020/03/22/3.22-%E7%99%BB%E5%BD%95%E9%A1%B5%E9%9D%A2%E7%BB%95%E8%BF%87%E9%AA%8C%E8%AF%81/</id>
    <published>2020-03-22T13:53:01.000Z</published>
    <updated>2020-03-25T05:32:56.212Z</updated>
    
    <content type="html"><![CDATA[<p>登录页面：<a href="https://www.cnblogs.com/Risk2S/p/11447279.html" target="_blank" rel="noopener">https://www.cnblogs.com/Risk2S/p/11447279.html</a></p><p>验证码逻辑漏洞：<a href="https://www.cnblogs.com/ping007/p/10265764.html" target="_blank" rel="noopener">https://www.cnblogs.com/ping007/p/10265764.html</a></p><p>逻辑漏洞：</p><h4 id=""><a href="#" class="headerlink" title=""></a></h4><h4 id="绕过短信验证码"><a href="#绕过短信验证码" class="headerlink" title="绕过短信验证码"></a><strong>绕过短信验证码</strong></h4><h6 id="通过修改响应包的返回值绕过"><a href="#通过修改响应包的返回值绕过" class="headerlink" title="通过修改响应包的返回值绕过"></a>通过修改响应包的返回值绕过</h6><h6 id="服务端未对身份做校验"><a href="#服务端未对身份做校验" class="headerlink" title="服务端未对身份做校验"></a>服务端未对身份做校验</h6><p>验证码置空绕过验证</p><h6 id="发送短信时，将手机号替换为自己的手机号获取验证码"><a href="#发送短信时，将手机号替换为自己的手机号获取验证码" class="headerlink" title="发送短信时，将手机号替换为自己的手机号获取验证码"></a>发送短信时，将手机号替换为自己的手机号获取验证码</h6><h6 id="允许一次给多个手机号发送短信，获取验证码"><a href="#允许一次给多个手机号发送短信，获取验证码" class="headerlink" title="允许一次给多个手机号发送短信，获取验证码"></a>允许一次给多个手机号发送短信，获取验证码</h6><p>爆破，空格绕过短信条数限制，修改cookie绕过短信数目限制</p><h5 id="用户枚举（无验证身份，提醒明确，"><a href="#用户枚举（无验证身份，提醒明确，" class="headerlink" title="用户枚举（无验证身份，提醒明确，"></a>用户枚举（无验证身份，提醒明确，</h5><h4 id="重置密码1"><a href="#重置密码1" class="headerlink" title="重置密码1"></a>重置密码1</h4><p> 主要发生在修改密码、忘记密码处，在逻辑上处理不严谨造成的。比如，忘记密码处，先验证身份，验证通过才允许密码重置，前面验证很严谨，不能绕过，但是第三步不严谨，比如仅根据账号来进行密码重置，那就很可能存在任意用户密码重置。 </p><h4 id="2-支付漏洞"><a href="#2-支付漏洞" class="headerlink" title="2.支付漏洞"></a>2.支付漏洞</h4><p>攻击者通过修改交易金额、交易数量等从而利用漏洞， 如Burp修改交易金额、使交易数量为负数或无限大等。 * 在支付时直接修改数据包中的支付金额，实现小金额购买大金额商品 * 修改购买数量，使之为负数，可购买负数量商品，从而扣除负积分，即增加积分，  或使购买数量无限大，无限大时则程序可能处理出错，从而实现0金额支付 * 请求重放，在购买成功后重放请求，可实现”一次购买对此收货”</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;登录页面：&lt;a href=&quot;https://www.cnblogs.com/Risk2S/p/11447279.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.cnblogs.com/Risk2S/p/11447279.ht
      
    
    </summary>
    
    
      <category term="漏洞" scheme="http://yoursite.com/categories/%E6%BC%8F%E6%B4%9E/"/>
    
    
      <category term="漏洞" scheme="http://yoursite.com/tags/%E6%BC%8F%E6%B4%9E/"/>
    
  </entry>
  
  <entry>
    <title>3.22-hashcat密码爆破，很厉害</title>
    <link href="http://yoursite.com/2020/03/22/3-22-hashcat%E5%AF%86%E7%A0%81%E7%88%86%E7%A0%B4%EF%BC%8C%E5%BE%88%E5%8E%89%E5%AE%B3/"/>
    <id>http://yoursite.com/2020/03/22/3-22-hashcat%E5%AF%86%E7%A0%81%E7%88%86%E7%A0%B4%EF%BC%8C%E5%BE%88%E5%8E%89%E5%AE%B3/</id>
    <published>2020-03-22T12:44:26.000Z</published>
    <updated>2020-03-22T12:44:48.026Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/qq_37865996/article/details/83863075" target="_blank" rel="noopener">https://blog.csdn.net/qq_37865996/article/details/83863075</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/qq_37865996/article/details/83863075&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://blog.csdn.net/qq_37865996/art
      
    
    </summary>
    
    
      <category term="kali" scheme="http://yoursite.com/categories/kali/"/>
    
    
      <category term="hashcat" scheme="http://yoursite.com/tags/hashcat/"/>
    
  </entry>
  
  <entry>
    <title>3.22-跨域安全</title>
    <link href="http://yoursite.com/2020/03/22/3.22-%E8%B7%A8%E5%9F%9F%E5%AE%89%E5%85%A8/"/>
    <id>http://yoursite.com/2020/03/22/3.22-%E8%B7%A8%E5%9F%9F%E5%AE%89%E5%85%A8/</id>
    <published>2020-03-22T09:27:42.000Z</published>
    <updated>2020-03-25T05:15:56.362Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://www.52bug.cn/hkjs/4936.html" target="_blank" rel="noopener">http://www.52bug.cn/hkjs/4936.html</a></p><h5 id="1-2-源的划分"><a href="#1-2-源的划分" class="headerlink" title="1.2 源的划分"></a>1.2 源的划分</h5><p>如果两个页面的协议、端口、域都相同，则两个页面具有相同的源。如下表所示：</p><p><img src="/images/15232395952675.png!small" alt="微信图片_20180408141628.png"></p><p>注意：源的划分中“域“并不是指资源对象所在的域，而是加载资源对象的域。例如a.com通过通过以下代码</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">http://b.com/b.js</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>加载了b.com上的b.js，但是b.js是运行在a.com上的，所以b.js的源是a.com而不是b.com。</p><h5 id="二、window-name"><a href="#二、window-name" class="headerlink" title="二、window.name"></a>二、window.name</h5><p> window.name的跨域本质上一种浏览器的特性，并不是安全漏洞，只是如果使用不当可能会有安全问题。在防御上，当在一个域去接收另一个域的window.name的值的时候要对其进行检测，此时它相当于一个输入点，而开发中要坚信任何输入都是不可信的原则。 </p><p>可xss;</p><h5 id="postMessage"><a href="#postMessage" class="headerlink" title="postMessage"></a>postMessage</h5><p> postMessage允许每一个Window（包括当前窗口、弹出窗口、iframe等）对象往其他的窗口发送文本消息，从而实现跨窗口消息传递，且这个功能不受同源策略影响。postMessage语法如下： </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;http://www.52bug.cn/hkjs/4936.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://www.52bug.cn/hkjs/4936.html&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&quot;1-2-源的划分&quot;&gt;
      
    
    </summary>
    
    
      <category term="漏洞" scheme="http://yoursite.com/categories/%E6%BC%8F%E6%B4%9E/"/>
    
    
  </entry>
  
  <entry>
    <title>3.22-内网入侵ipc$连接</title>
    <link href="http://yoursite.com/2020/03/22/3.22-%E5%86%85%E7%BD%91%E5%85%A5%E4%BE%B5ipc-%E8%BF%9E%E6%8E%A5/"/>
    <id>http://yoursite.com/2020/03/22/3.22-%E5%86%85%E7%BD%91%E5%85%A5%E4%BE%B5ipc-%E8%BF%9E%E6%8E%A5/</id>
    <published>2020-03-22T09:04:27.000Z</published>
    <updated>2020-03-23T14:38:42.621Z</updated>
    
    <content type="html"><![CDATA[<p>ntscan/x-scan</p><p><a href="https://www.cnblogs.com/h4ck0ne/p/5154599.html" target="_blank" rel="noopener">https://www.cnblogs.com/h4ck0ne/p/5154599.html</a></p><p><a href="https://www.cnblogs.com/backlion/p/7401609.html" target="_blank" rel="noopener">https://www.cnblogs.com/backlion/p/7401609.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;ntscan/x-scan&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/h4ck0ne/p/5154599.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.cnblogs.com/h4ck
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>3.22-本地文件上传漏洞（LFI）</title>
    <link href="http://yoursite.com/2020/03/22/3.22-%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E%EF%BC%88LFI%EF%BC%89/"/>
    <id>http://yoursite.com/2020/03/22/3.22-%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E%EF%BC%88LFI%EF%BC%89/</id>
    <published>2020-03-21T16:36:04.000Z</published>
    <updated>2020-03-24T11:36:12.427Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.cnblogs.com/wh4am1/p/6542398.html" target="_blank" rel="noopener">https://www.cnblogs.com/wh4am1/p/6542398.html</a></p><p>在基本的LFI攻击中，我们可以使用（../）或简单地（/）从目录中直接<a href="https://www.secpulse.com/archives/tag/读取文件" target="_blank" rel="noopener">读取文件</a>的内容，下面的截图中在浏览器URL中访问密码文件。</p><p>在一些情况下，由于高安全级别，上面提到的基本本地文件包含攻击可能不工作。从下面的截图可以观察到，当在URL中执行相同的路径时，却无法读取密码文件。 所以当面对这样的问题，可以进行NULL byte攻击。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/wh4am1/p/6542398.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.cnblogs.com/wh4am1/p/6542398.html&lt;/a&gt;&lt;
      
    
    </summary>
    
    
      <category term="漏洞" scheme="http://yoursite.com/categories/%E6%BC%8F%E6%B4%9E/"/>
    
    
      <category term="upload" scheme="http://yoursite.com/tags/upload/"/>
    
      <category term="漏洞" scheme="http://yoursite.com/tags/%E6%BC%8F%E6%B4%9E/"/>
    
  </entry>
  
  <entry>
    <title>3.21-渗透靶机-acid</title>
    <link href="http://yoursite.com/2020/03/21/3.21-%E6%B8%97%E9%80%8F%E9%9D%B6%E6%9C%BA-acid/"/>
    <id>http://yoursite.com/2020/03/21/3.21-%E6%B8%97%E9%80%8F%E9%9D%B6%E6%9C%BA-acid/</id>
    <published>2020-03-21T14:59:50.000Z</published>
    <updated>2020-03-21T15:00:24.587Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.anquanke.com/post/id/105462?from=timeline" target="_blank" rel="noopener">https://www.anquanke.com/post/id/105462?from=timeline</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.anquanke.com/post/id/105462?from=timeline&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.anquanke.com/post/id/105462?fr
      
    
    </summary>
    
    
      <category term="内网渗透" scheme="http://yoursite.com/categories/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
    
      <category term="靶机" scheme="http://yoursite.com/tags/%E9%9D%B6%E6%9C%BA/"/>
    
      <category term="内网渗透" scheme="http://yoursite.com/tags/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
</feed>
